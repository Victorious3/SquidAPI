/*******************************************************************************
 * Copyright (c) 2015 CoolSquid.
 * All rights reserved.
 *******************************************************************************/
package com.github.coolsquid.squidapi;

import java.util.List;

import com.github.coolsquid.squidapi.handlers.IncompatibilityHandler;
import com.github.coolsquid.squidapi.handlers.IncompatibilityHandler.Incompatibility;
import com.github.coolsquid.squidapi.handlers.IncompatibilityHandler.Severity;
import com.google.common.collect.ImmutableList;
import com.google.common.collect.Lists;

import cpw.mods.fml.common.Loader;
import cpw.mods.fml.common.ModContainer;
import cpw.mods.fml.common.ModMetadata;

public class SquidAPIMod {
	
	private static final List<SquidAPIMod> mods = Lists.newArrayList();
	
	public static List<SquidAPIMod> getMods() {
		return ImmutableList.copyOf(mods);
	}

	private final ModContainer mod;

	public SquidAPIMod(String desc) {
		this(desc, Lists.newArrayList("CoolSquid"), "", "http://coolsquid.wix.com/software");
	}
	
	public SquidAPIMod(String desc, List<String> authors, String credits, String url) {
		this.mod = Loader.instance().activeModContainer();
		
		ModMetadata meta = this.mod.getMetadata();
		meta.autogenerated = false;
		meta.credits = credits;
		meta.authorList = authors;
		meta.description = desc;
		
		mods.add(this);
	}
	
	public final ModContainer getMod() {
		return this.mod;
	}
	
	public final ModMetadata getMetadata() {
		return this.mod.getMetadata();
	}
	
	public final List<Incompatibility> getIncompatibilities() {
		return IncompatibilityHandler.instance().getIncompatibilities(this);
	}
	
	public final void registerIncompatibility(Incompatibility incompatibility) {
		IncompatibilityHandler.instance().registerIncompatibility(this, incompatibility);
	}
	
	public final void registerIncompatibility(String modid, String reason, Severity severity) {
		IncompatibilityHandler.instance().registerIncompatibility(this, new Incompatibility(modid, reason, severity));
	}
	
	public final void getIncompatibilities(Severity severity) {
		IncompatibilityHandler.instance().getIncompatibilities(this, severity);
	}
}